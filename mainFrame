/**
 * This class builds a frame with a menu and drop down options to display all the information.
 */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.util.*;

public class MainFrame extends JFrame
{
  private JDesktopPane theDesktop;
  
  public MainFrame() 
  {
    super( "Main Frame" );
    JMenuBar bar = new JMenuBar(); // create menu bar
    
    JMenu file = new JMenu( "File" );// create Add menu
    JMenuItem login = new JMenuItem( "Login" );
    JMenuItem logoff = new JMenuItem( "Logoff" );
    JMenuItem close = new JMenuItem( "Close" );
    
    JMenu student = new JMenu("Student");
    JMenuItem findStudent = new JMenuItem("Find Student");
    JMenuItem studentSchedule = new JMenuItem("Display Course Schedule");
    JMenuItem addSection = new JMenuItem("Add Section");
    JMenuItem dropSection = new JMenuItem("Drop Section");
    JMenuItem viewTranscript = new JMenuItem("View Transcript");
    
    JMenu professor = new JMenu("Professor");
    JMenuItem findProfessor = new JMenuItem("Find Professor");
    JMenuItem teachingAssignments = new JMenuItem("Display Teaching Assignments");
    JMenuItem studentRoster = new JMenuItem("Display Student Roster");
    JMenuItem agreeToTeach = new JMenuItem("Agree to Teach a Course");
    
    file.add( login ); // add new frame item to File menu
    file.add( logoff );
    file.add(close);
    
    student.add(findStudent); // add new frame item to Student menu
    student.add(studentSchedule);
    student.add(addSection);
    student.add(dropSection);
    student.add(viewTranscript);
    
    professor.add(findProfessor); // add new frame item to Professor menu
    professor.add(teachingAssignments);
    professor.add(studentRoster);
    professor.add(agreeToTeach);
    
    bar.add(file); // add File menu to menu bar
    bar.add(student); // add student menu to menu bar
    bar.add(professor);// add Professor menu to menu bar
    setJMenuBar(bar); // set menu bar for this application
    
    theDesktop = new JDesktopPane(); // create desktop pane
    add( theDesktop ); // add desktop pane to frame    
    
    /*set up listener for newFrame menu item**/
    ActionListener loginItemListener = new LoginItemListener();
    login.addActionListener(loginItemListener);
    ActionListener logoffItemListener = new LogoffItemListener();
    logoff.addActionListener(logoffItemListener);
    ActionListener closeItemListener = new CloseItemListener();
    close.addActionListener(closeItemListener);
    ActionListener findStudentListener = new FindStudentListener();
    student.addActionListener(FindStudentListener());
    
    
  } 
  
  class LoginItemListener implements ActionListener
  {  
    public void actionPerformed(ActionEvent event)
    {  
      JInternalFrame loginFrame = new LoginInternalFrame();
      loginFrame.pack(); // set internal frame to size of contents      
      theDesktop.add( loginFrame ); // attach internal frame
      loginFrame.setVisible( true ); // show internal frame
      loginFrame.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
  }
  
  class LogoffItemListener implements ActionListener
  {  
    public void actionPerformed(ActionEvent event)
    {
      JInternalFrame frame = new JInternalFrame( "", true, true, true, true );
      JLabel label = new JLabel("You have been logged off!");
      theDesktop.add( frame ); // attach internal frame
      frame.add(label); //add label
      frame.pack();// set internal frame to size of contents   
      frame.setVisible( true ); // show internal frame
      frame.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
  }
  
  class CloseItemListener implements ActionListener
  {
    public void actionPerformed(ActionEvent event)
    {
      dispose();
    }
  }
  
  class FindStudentListener implements ActionListener
  {
    public void actionPerformed(ActionEvent event)
    {
      JInternalFrame frame = new JInternalFrame("Find Student",true,true,true,true);
      JLabel label = new JLabel("SSN: ");
      
    }
  }
  
  
  public static void main( String[] args )
  { 
    MainFrame desktopFrame = new MainFrame();  
    desktopFrame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );
    desktopFrame.setSize( 600, 480 ); // set frame size
    desktopFrame.setVisible( true ); // display frame
  }
}
